@use "../selectors.scss" as selectors;
@use "../sheet.scss" as sheet;
@use "../variants.scss" as variants;
@use "../utils.scss" as utils;

// Generate spinner component configuration
@mixin spinner ($options: utils.empty-map()) {
    //$options: utils.empty-map();
    $animation-name: utils.get-in($options, "animation.name", "siimple-spinner-animation");
    $animation-duration: utils.get-in($options, "animation.duration", 1s);
    //$border-width: lib.get($options, "border.width", 4px);
    //$border-color: lib.get($options, "border.color", lib.get-color("white"));
    //$border-opacity: lib.get($options, "border.opacity", 0.2);
    //Create spinner component
    @include selectors.use-component-selector("spinner") {
        display: inline-block;
        height: 2rem;
        position: relative;
        width: 2rem;
        //Spinner anlimation elements
        &:before,
        &:after {
            border: 0.25rem solid transparent;
            border-radius: 100%;
            content: "";
            display: block;
            height: 2rem;
            left: 0px;
            position: absolute;
            top: 0px;
            width: 2rem;
        }
        &:before {
            border-color: currentColor;
            opacity: 0.2;
        }
        &:after {
            border-top-color: currentColor;
            animation: #{utils.unquote($animation-name)} #{$animation-duration} infinite linear;
        }

        // Load spinner variants
        @include variants.use-variant("spinner", (
            "default": (
                "color": "primary",
            ),
        ));
    }
    // Spinner keyframes
    @include sheet.use-keyframes($animation-name, (
        "from": (
            "transform": "rotate(0deg)",
        ),
        "to": (
            "transform": "rotate(359deg)",
        ),
    ));
}
