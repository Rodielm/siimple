@use "./utils.scss" as utils;
@use "./constants.scss" as constants;

// Colors configuration
// Primary, text, background, muted and accent colors are required
$default-colors: (
    "primary": constants.$color-primary,
    "text": constants.$color-text,
    "background": constants.$color-background,
    "muted": constants.$color-muted,
    "accent": constants.$color-accent,
    "highlight": constants.$color-highlight,
);

//Default font variables
//WARNING: we are not importing fonts automatically --> use a <link> tag instead
//$font-url: "https://fonts.googleapis.com/css?family=Roboto:400,700" !default;
$default-fonts: (
    "default": constants.$font-sans, 
    //"serif": constants.$font-serif,
    "mono": constants.$font-mono,
);

// Default font Weight values
$default-font-weights: (
    "light": 300,
    "normal": 400,
    "medium": 500,
    "bold": 700,
);

// Default font size values
$default-font-sizes: (
    "tiny": 0.75rem,
    "small": 0.875rem,
    "default": 16px,
    "large": 1.25rem,
    "huge": 2rem,
);

// Default line height values
$default-line-heights: (
    "small": 1.25,
    "default": 1.5,
    "large": 1.75,
);

// Default radius values
$default-radius: (
    "small": 0.25rem,
    "default": 0.5rem,
    "large": 1rem,
);

//Sizes mapping
$default-sizes: (
    "0": 0px,
    "1": 0.25rem,
    "2": 0.5rem,
    "3": 0.75rem,
    "4": 1rem,
    "6": 1.5rem,
    "8": 2rem,
    "10": 2.5rem,
    "12": 3rem,
    "20": 5rem,
    "24": 6rem,
    "32": 8rem,
    "40": 10rem,
    "64": 16rem,
    "80": 20rem,
    "120": 30rem,
);

// Theme global map
$default-theme: (
    "colors": $default-colors,
    "fonts": $default-fonts,
    "font-sizes": $default-font-sizes,
    "font-weights": $default-font-weights,
    "line-heights": $default-line-heights,
    "sizes": $default-sizes,
    "radius": $default-radius,
);

// @description Parse a theme object
@function parse-theme ($theme) {
    @if not utils.is-map($theme) {
        $theme: utils.empty-map();
    }
    // Check default theme options
    @each $key,$value in $default-theme {
        $current: utils.get-in($theme, $key, null);
        @if not utils.is-map($current) {
            $current: $value; //Set default value
        }
        $theme: map.set($theme, $key, $current);
    }
    // Returm theme config
    @return $theme;
}

