@use "../variables.scss" as variables;
@use "../functions.scss" as functions;
@use "../mixins.scss" as mixins;

$btn-font-size: variables.$font-size-base !default;
$btn-font-family: inherit !default; 
$btn-line-height: variables.$line-height-base !default;

$btn-padding-left: 15px !default;
$btn-padding-right: 15px !default;
$btn-padding-top: 8px !default;
$btn-padding-bottom: 8px !default;

//Button class
.#{variables.$prefix}btn {
    display: inline-block;
    //min-height: 24px;
    //transition: opacity 0.3s;
    //transition: background-color 0.3s;
    cursor: pointer;
    line-height: $btn-line-height;
    text-align: center;
    text-decoration: none;
    font-size: $btn-font-size;
    font-family: $btn-font-family;
    //font-weight: bold;
    padding-left: $btn-padding-left;
    padding-right: $btn-padding-right;
    padding-top: $btn-padding-top;
    padding-bottom: $btn-padding-bottom;
    border-radius: variables.$border-radius-base;
    //Disable default button element borders
    //https://github.com/siimple/siimple/pull/17
    border: 0px;
    //Disable user selection
    @include mixins.user-select(none);
    //Default button style
    color: functions.get-color("dark");
    background-color: functions.get-color("light");
    //Button hover style
    &:hover {
        text-decoration: none;
        //opacity: 0.8;
        background-color: functions.get-color-darker("light");
        transition: background-color 0.3s;
    }
    //Button colors
    @each $color in variables.$colors-modifiers {
        &.is-#{$color} {
            background-color: functions.get-color($color);
            color: functions.get-color-invert($color);
            //Button hover
            &:hover {
                background-color: functions.get-color-darker($color);
            }
        }
    }
    //Disabled button
    &.is-disabled {
        //background-color: $siimple-btn-disabled-background !important;
        //color: rgba($siimple-btn-disabled-color, $siimple-btn-disabled-color-alpha) !important;
        opacity: 0.6 !important;
        cursor: not-allowed !important;
    }
    //Small button
    &.is-small {
        padding-left: 12px;
        padding-right: 12px;
        padding-top: 6px;
        padding-bottom: 6px;
        font-size: variables.$font-size-small;
        //line-height: 15px;
    }
    //Large button
    &.is-large {
        padding-left: 20px;
        padding-right: 20px;
        padding-top: 10px;
        padding-bottom: 10px;
        font-size: variables.$font-size-large;
        //line-height: 30px;
    }
    //Block button
    &.is-full {
        display: block;
        width: 100%;
        //padding-left: 0px !important;
        //padding-right: 0px !important;
    }
    //Rounded button
    //&--rounded {
    //    border-radius: 50px !important;
    //}
    //Group buttons
    &-group {
        display: inline-block;
    }
    &-group > &:not(:first-child) {
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
        margin-left: -1px;
    }
    &-group > &:not(:last-child) {
        border-top-right-radius: 0px;
        border-bottom-right-radius: 0px;
        margin-right: -2px;
    }
    //White button
    &.is-white {
        //transition: opacity 0.3s !important;
        background-color: functions.get-color("white");
        opacity: 1.0;
        &:hover {
            background-color: functions.get-color("white") !important;
            opacity: 0.8;
        }
    }
}

