@use "./index.scss" as helpers;
@use "../../variables.scss" as variables;
@use "../../mixins.scss" as mixins;
@use "sass:string";

//Background helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "bg",
    "variants": ("base" "hover"),
    "properties": ("background-color"),
    "values": helpers.$background-color
), (
    "name": "bg",
    "variants": ("base"),
    "properties": ("background-size"),
    "values": helpers.$background-size
), (
    "name": "bg",
    "variants": ("base"),
    "properties": ("background-repeat"),
    "values": helpers.$background-repeat
));

//Border helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "border",
    "variants": ("base"),
    "properties": ("border-radius"),
    "values": helpers.$border-radius
));

//Sizing helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "w",
    "variants": ("base" "responsive"),
    "properties": ("width"),
    "values": helpers.$sizing
), (
    "name": "minw",
    "variants": ("base"),
    "properties": ("min-width"),
    "values": helpers.$sizing
), (
    "name": "maxw",
    "variants": ("base"),
    "properties": ("max-width"),
    "values": helpers.$sizing
), (
    "name": "h",
    "variants": ("base" "responsive"),
    "properties": ("height"),
    "values": helpers.$sizing
), (
    "name": "minh",
    "variants": ("base"),
    "properties": ("min-height"),
    "values": helpers.$sizing
), (
    "name": "maxh",
    "variants": ("base"),
    "properties": ("max-height"),
    "values": helpers.$sizing
));

//Text helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "text",
    "variants": ("base"),
    "properties": ("font-weight"),
    "values": helpers.$text-weight
), (
    "name": "text",
    "variants": ("base"),
    "properties": ("font-size"),
    "values": helpers.$text-size
), (
    "name": "text",
    "variants": ("base" "hover"),
    "properties": ("color"),
    "values": helpers.$text-color
), (
    "name": "text",
    "variants": ("base"),
    "properties": ("white-space"),
    "values": helpers.$text-overflow
), (
    "name": "text",
    "variants": ("base"),
    "properties": ("font-style"),
    "values": helpers.$text-style
), (
    "name": "text",
    "variants": ("base"),
    "properties": ("text-transform"),
    "values": helpers.$text-transform
), (
    "name": "text",
    "variants": ("base" "responsive"),
    "properties": ("text-align"),
    "values": helpers.$text-align
));

//Line height helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "lh",
    "variants": ("base"),
    "properties": ("line-height"),
    "values": helpers.$line-height
));

//Vertical align helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "align",
    "variants": ("base"),
    "properties": ("vertical-align"),
    "values": helpers.$vertical-align
));

//Flexbox helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "flex",
    "variants": ("base" "responsive"),
    "properties": ("flex-direction"),
    "values": helpers.$flexbox-direction
), (
    "name": "flex",
    "variants": ("base" "responsive"),
    "properties": ("justify-content"),
    "values": helpers.$flexbox-horizontal-align
), (
    "name": "flex",
    "variants": ("base" "responsive"),
    "properties": ("align-items"),
    "values": helpers.$flexbox-vertical-align
), (
    "name": "flex",
    "variants": ("base" "responsive"),
    "properties": ("flex-wrap"),
    "values": helpers.$flexbox-wrap
), (
    "name": "flex",
    "variants": ("base" "responsive"),
    "properties": ("order"),
    "values": helpers.$flexbox-order
));

//Spacing helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "p",
    "variants": ("base" "responsive"),
    "properties": ("padding"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "px",
    "variants": ("base" "responsive"),
    "properties": ("padding-left" "padding-right"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "py",
    "variants": ("base" "responsive"),
    "properties": ("padding-top" "padding-bottom"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "pt",
    "variants": ("base" "responsive"),
    "properties": ("padding-top"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "pb",
    "variants": ("base" "responsive"),
    "properties": ("padding-bottom"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "pl",
    "variants": ("base" "responsive"),
    "properties": ("padding-left"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "pr",
    "variants": ("base" "responsive"),
    "properties": ("padding-right"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "m",
    "variants": ("base" "responsive"),
    "properties": ("margin"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "mx",
    "variants": ("base" "responsive"),
    "properties": ("margin-left" "margin-right"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "my",
    "variants": ("base" "responsive"),
    "properties": ("margin-top" "margin-bottom"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "mt",
    "variants": ("base" "responsive"),
    "properties": ("margin-top"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "mb",
    "variants": ("base" "responsive"),
    "properties": ("margin-bottom"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "ml",
    "variants": ("base" "responsive"),
    "properties": ("margin-left"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "mr",
    "variants": ("base" "responsive"),
    "properties": ("margin-right"),
    "important": true,
    "values": helpers.$spacing
), (
    "name": "mx",
    "variants": ("base" "responsive"),
    "properties": ("margin-left" "margin-right"),
    "important": true,
    "values": helpers.$spacing-auto
));

//Display helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "display",
    "variants": ("base" "responsive"),
    "properties": ("display"),
    "values": helpers.$display
));

//Overflow
@include mixins.utility(variables.$helper-prefix, (
    "name": "overflow",
    "varians": ("base"),
    "properties": ("overflow"),
    "values": helpers.$overflow
), (
    "name": "overflow-x",
    "variants": ("base"),
    "properties": ("overflow-x"),
    "values": helpers.$overflow
), (
    "name": "overflow-y",
    "variants": ("base"),
    "properties": ("overflow-y"),
    "values": helpers.$overflow
));

//Cursors helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "cursor",
    "variants": ("base" "hover"),
    "properties": ("cursor"),
    "values": helpers.$cursor
));

//Position helpers
@include mixins.utility(variables.$helper-prefix, (
    "name": "position",
    "variants": ("base" "responsive"),
    "properties": ("position"),
    "values": helpers.$position
), (
    "name": "top",
    "variants": ("base" "responsive"),
    "properties": ("top"),
    "values": helpers.$position-arrange
), (
    "name": "bottom",
    "variants": ("base" "responsive"),
    "properties": ("bottom"),
    "values": helpers.$position-arrange
), (
    "name": "left",
    "variants": ("base" "responsive"),
    "properties": ("left"),
    "values": helpers.$position-arrange
), (
    "name": "right",
    "variants": ("base" "responsive"),
    "properties": ("right"),
    "values": helpers.$position-arrange
));

//Other helpers
.#{variables.$helper-prefix} {
    //Border helpers
    //&rounded { border-radius: variables.$border-radius-base !important; }
    //&rounded-small { border-radius: variables.$border-radius-small !important; }
    //&rounded-large { border-radius: variables.$border-radius-large !important; }
    //&circle { border-radius: 50% !important; }
    //Clearing and floating
    &float-left { float: left !important; }
    &float-right { float: right !important; }
    &clearfix {
        @include mixins.clearfix();
    }
    //Shadow helper
    &shadow {
        @include mixins.shadow();
    }
    &no-shadow {
        box-shadow: none !important;
    }
    //Text
    &text-truncate {
        @include mixins.truncate();
    }
    &text-break { word-wrap: break-word !important; }
    &text-underline { text-decoration: underline; }
    &text-decoration-none { text-decoration: none !important; }
    //Display flex
    &flex { display: flex !important; }
    &flex-inline { display: inline-flex !important; }
}

